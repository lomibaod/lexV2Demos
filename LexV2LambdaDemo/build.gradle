plugins {
    id("java")
    //id("org.springframework.boot") version "2.3.4.RELEASE"
    //id("io.spring.dependency-management") version "1.0.6.RELEASE"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.4"
}

version = "0.1"
group = "net.lomibao"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("net.lomibao.*")
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    //annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    // for Java applications
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    //annotationProcessor "io.micronaut.spring:micronaut-spring-annotation"

    //support spring annotations
    annotationProcessor "io.micronaut.spring:micronaut-spring-boot-annotation"

    implementation "io.micronaut:micronaut-inject"

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    compileOnly("io.micronaut:micronaut-inject")
    //compileOnly("org.springframework.boot:spring-boot-starter")

    implementation("commons-io:commons-io:2.11.0")
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime")

    //testRuntime('org.junit.jupiter:junit-jupiter:5.4.2')
}


application {
    mainClass.set("io.micronaut.function.aws.runtime.MicronautLambdaRuntime")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}



